{"remainingRequest":"/home/tghazali/Documents/pidie/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/tghazali/Documents/pidie/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/tghazali/Documents/pidie/node_modules/vue-loader/lib/index.js??ref--1-1!/home/tghazali/Documents/pidie/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/home/tghazali/Documents/pidie/docs/guide/deploy.md?vue&type=template&id=7ff0bdcd&","dependencies":[{"path":"/home/tghazali/Documents/pidie/docs/guide/deploy.md","mtime":1537032815000},{"path":"/home/tghazali/Documents/pidie/node_modules/cache-loader/dist/cjs.js","mtime":1534142313674},{"path":"/home/tghazali/Documents/pidie/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1536479208953},{"path":"/home/tghazali/Documents/pidie/node_modules/cache-loader/dist/cjs.js","mtime":1534142313674},{"path":"/home/tghazali/Documents/pidie/node_modules/vue-loader/lib/index.js","mtime":1536479208953},{"path":"/home/tghazali/Documents/pidie/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1536479242222}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"The following guides are based on a few shared assumptions:\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"Make sure you have \"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://www.npmjs.com/package/firebase-tools\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"firebase-tools\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\" installed.\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _vm._m(15)\n    ]),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _vm._m(20),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"First install \"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://www.npmjs.com/package/surge\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"surge\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\", if you haven't already.\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _vm._m(22),\n      _vm._v(\" \"),\n      _vm._m(23)\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"You can also deploy to a \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://surge.sh/help/adding-a-custom-domain\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"custom domain\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" by adding \"),\n      _c(\"code\", [_vm._v(\"surge docs/.vuepress/dist yourdomain.com\")]),\n      _vm._v(\".\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._v(\" \"),\n    _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"First install \"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://devcenter.heroku.com/articles/heroku-cli\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"Heroku CLI\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\".\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"Create a Heroku account \"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://signup.heroku.com\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"here\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\".\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _vm._m(25)\n    ]),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _vm._v(\" \"),\n    _vm._m(29),\n    _c(\"p\", [\n      _vm._v(\"This is the configuration of your site. see more at \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://github.com/heroku/heroku-buildpack-static\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"heroku-buildpack-static\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\".\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _vm._m(32),\n    _vm._v(\" \"),\n    _vm._m(33)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"deploying\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#deploying\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Deploying\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"You are placing your docs inside the \"),\n        _c(\"code\", [_vm._v(\"docs\")]),\n        _vm._v(\" directory of your project;\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"You are using the default build output location (\"),\n        _c(\"code\", [_vm._v(\".vuepress/dist\")]),\n        _vm._v(\");\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"VuePress is installed as a local dependency in your project, and you have setup the following npm scripts:\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token property\" } }, [\n            _vm._v('\"scripts\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token property\" } }, [\n            _vm._v('\"docs:build\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"vuepress build docs\"')\n          ]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"github-pages\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#github-pages\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" GitHub Pages\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"Set correct \"),\n          _c(\"code\", [_vm._v(\"base\")]),\n          _vm._v(\" in \"),\n          _c(\"code\", [_vm._v(\"docs/.vuepress/config.js\")]),\n          _vm._v(\".\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\"If you are deploying to \"),\n          _c(\"code\", [_vm._v(\"https://<USERNAME>.github.io/\")]),\n          _vm._v(\", you can omit \"),\n          _c(\"code\", [_vm._v(\"base\")]),\n          _vm._v(\" as it defaults to \"),\n          _c(\"code\", [_vm._v('\"/\"')]),\n          _vm._v(\".\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\"If you are deploying to \"),\n          _c(\"code\", [_vm._v(\"https://<USERNAME>.github.io/<REPO>/\")]),\n          _vm._v(\", (i.e. your repository is at \"),\n          _c(\"code\", [_vm._v(\"https://github.com/<USERNAME>/<REPO>\")]),\n          _vm._v(\"), set \"),\n          _c(\"code\", [_vm._v(\"base\")]),\n          _vm._v(\" to \"),\n          _c(\"code\", [_vm._v('\"/<REPO>/\"')]),\n          _vm._v(\".\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"Inside your project, create \"),\n          _c(\"code\", [_vm._v(\"deploy.sh\")]),\n          _vm._v(\n            \" with the following content (with highlighted lines uncommented appropriately) and run it to deploy:\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"div\", { staticClass: \"highlight-lines\" }, [\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"div\", { staticClass: \"highlighted\" }, [_vm._v(\" \")]),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"div\", { staticClass: \"highlighted\" }, [_vm._v(\" \")]),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"div\", { staticClass: \"highlighted\" }, [_vm._v(\" \")]),\n        _c(\"br\"),\n        _c(\"br\"),\n        _c(\"br\")\n      ]),\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"#!/usr/bin/env sh\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# abort on errors\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"set\")]),\n          _vm._v(\" -e\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# build\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"npm\")]),\n          _vm._v(\" run docs:build\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# navigate into the build output directory\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"cd\")]),\n          _vm._v(\" docs/.vuepress/dist\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# if you are deploying to a custom domain\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# echo 'www.example.com' > CNAME\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"git\")]),\n          _vm._v(\" init\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"git\")]),\n          _vm._v(\" add -A\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"git\")]),\n          _vm._v(\" commit -m \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v(\"'deploy'\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# if you are deploying to https://<USERNAME>.github.io\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master\"\n            )\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"# if you are deploying to https://<USERNAME>.github.io/<REPO>\"\n            )\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages\"\n            )\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"cd\")]),\n          _vm._v(\" -\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"You can also run the above script in your CI setup to enable automatic deployment on each push.\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"gitlab-pages-and-gitlab-ci\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#gitlab-pages-and-gitlab-ci\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" GitLab Pages and GitLab CI\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"Set correct \"),\n          _c(\"code\", [_vm._v(\"base\")]),\n          _vm._v(\" in \"),\n          _c(\"code\", [_vm._v(\"docs/.vuepress/config.js\")]),\n          _vm._v(\".\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\"If you are deploying to \"),\n          _c(\"code\", [_vm._v(\"https://<USERNAME or GROUP>.gitlab.io/\")]),\n          _vm._v(\", you can omit \"),\n          _c(\"code\", [_vm._v(\"base\")]),\n          _vm._v(\" as it defaults to \"),\n          _c(\"code\", [_vm._v('\"/\"')]),\n          _vm._v(\".\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\"If you are deploying to \"),\n          _c(\"code\", [_vm._v(\"https://<USERNAME or GROUP>.gitlab.io/<REPO>/\")]),\n          _vm._v(\", (i.e. your repository is at \"),\n          _c(\"code\", [_vm._v(\"https://gitlab.com/<USERNAME>/<REPO>\")]),\n          _vm._v(\"), set \"),\n          _c(\"code\", [_vm._v(\"base\")]),\n          _vm._v(\" to \"),\n          _c(\"code\", [_vm._v('\"/<REPO>/\"')]),\n          _vm._v(\".\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"Set \"),\n          _c(\"code\", [_vm._v(\"dest\")]),\n          _vm._v(\" in \"),\n          _c(\"code\", [_vm._v(\".vuepress/config.js\")]),\n          _vm._v(\" to \"),\n          _c(\"code\", [_vm._v(\"public\")]),\n          _vm._v(\".\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"Create a file called \"),\n          _c(\"code\", [_vm._v(\".gitlab-ci.yml\")]),\n          _vm._v(\n            \" in the root of your project with the content below. This will build and deploy your site whenever you make changes to your content.\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-yaml extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-yaml\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"image\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" node\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\"9.11.1\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"pages\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"cache\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"paths\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"-\")]),\n          _vm._v(\" node_modules/\\n\\n  \"),\n          _c(\"span\", { attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"script\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"-\")]),\n          _vm._v(\" npm install\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"-\")]),\n          _vm._v(\" npm run docs\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\"build\\n  \"),\n          _c(\"span\", { attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"artifacts\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"paths\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"-\")]),\n          _vm._v(\" public\\n  \"),\n          _c(\"span\", { attrs: { class: \"token key atrule\" } }, [\n            _vm._v(\"only\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"-\")]),\n          _vm._v(\" master\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"netlify\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#netlify\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Netlify\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [\n        _vm._v(\n          \"On Netlify, setup up a new project from GitHub with the following settings:\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"strong\", [_vm._v(\"Build Command:\")]),\n        _vm._v(\" \"),\n        _c(\"code\", [_vm._v(\"npm run docs:build\")]),\n        _vm._v(\" or \"),\n        _c(\"code\", [_vm._v(\"yarn docs:build\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"strong\", [_vm._v(\"Publish directory:\")]),\n        _vm._v(\" \"),\n        _c(\"code\", [_vm._v(\"docs/.vuepress/dist\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { attrs: { start: \"2\" } }, [\n      _c(\"li\", [_vm._v(\"Hit the deploy button!\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"google-firebase\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#google-firebase\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Google Firebase\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"Create \"),\n        _c(\"code\", [_vm._v(\"firebase.json\")]),\n        _vm._v(\" and \"),\n        _c(\"code\", [_vm._v(\".firebaserc\")]),\n        _vm._v(\" at the root of your project with the following content:\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"code\", [_vm._v(\"firebase.json\")]), _vm._v(\":\")])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n \"),\n          _c(\"span\", { attrs: { class: \"token property\" } }, [\n            _vm._v('\"hosting\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n   \"),\n          _c(\"span\", { attrs: { class: \"token property\" } }, [\n            _vm._v('\"public\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"./docs/.vuepress/dist\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n   \"),\n          _c(\"span\", { attrs: { class: \"token property\" } }, [\n            _vm._v('\"ignore\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"code\", [_vm._v(\".firebaserc\")]), _vm._v(\":\")])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"projects\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n   \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"default\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"<YOUR_FIREBASE_ID>\"')\n          ]),\n          _vm._v(\"\\n \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { attrs: { start: \"3\" } }, [\n      _c(\"li\", [\n        _vm._v(\"After running \"),\n        _c(\"code\", [_vm._v(\"yarn docs:build\")]),\n        _vm._v(\" or \"),\n        _c(\"code\", [_vm._v(\"npm run docs:build\")]),\n        _vm._v(\", deploy with the command \"),\n        _c(\"code\", [_vm._v(\"firebase deploy\")]),\n        _vm._v(\".\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"surge\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#surge\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Surge\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"Run \"),\n        _c(\"code\", [_vm._v(\"yarn docs:build\")]),\n        _vm._v(\" or \"),\n        _c(\"code\", [_vm._v(\"npm run docs:build\")]),\n        _vm._v(\".\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"Deploy to surge, by typing \"),\n        _c(\"code\", [_vm._v(\"surge docs/.vuepress/dist\")]),\n        _vm._v(\".\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"heroku\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#heroku\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Heroku\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", [\n      _c(\"p\", [\n        _vm._v(\"Run \"),\n        _c(\"code\", [_vm._v(\"heroku login\")]),\n        _vm._v(\" and fill in your Heroku credentials:\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"heroku login\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { attrs: { start: \"4\" } }, [\n      _c(\"li\", [\n        _vm._v(\"Create a file called \"),\n        _c(\"code\", [_vm._v(\"static.json\")]),\n        _vm._v(\" in the root of your project with the content below:\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"code\", [_vm._v(\"static.json\")]), _vm._v(\":\")])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token property\" } }, [\n            _vm._v('\"root\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"./docs/.vuepress/dist\"')\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { attrs: { start: \"5\" } }, [\n      _c(\"li\", [_vm._v(\"Set up your Heroku git remote:\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# version change\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"git\")]),\n          _vm._v(\" init\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"git\")]),\n          _vm._v(\" add \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\".\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"git\")]),\n          _vm._v(\" commit -m \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"My site ready for deployment.\"')\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# creates a new app with a specified name\")\n          ]),\n          _vm._v(\"\\nheroku apps:create example\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# set buildpack for static sites\")\n          ]),\n          _vm._v(\n            \"\\nheroku buildpacks:set https://github.com/heroku/heroku-buildpack-static.git\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { attrs: { start: \"6\" } }, [\n      _c(\"li\", [_vm._v(\"Deploying Your Site\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# publish site\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"git\")]),\n          _vm._v(\" push heroku master\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\n              \"# opens a browser to view the Dashboard version of Heroku CI\"\n            )\n          ]),\n          _vm._v(\"\\nheroku \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"open\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}