{"remainingRequest":"/home/tghazali/Documents/pidie/node_modules/vue-loader/lib/index.js??ref--1-1!/home/tghazali/Documents/pidie/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/home/tghazali/Documents/pidie/docs/README.md?vue&type=template&id=c6f5370e&","dependencies":[{"path":"/home/tghazali/Documents/pidie/docs/README.md","mtime":1537315915469},{"path":"/home/tghazali/Documents/pidie/node_modules/cache-loader/dist/cjs.js","mtime":1534142313674},{"path":"/home/tghazali/Documents/pidie/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1536479208953},{"path":"/home/tghazali/Documents/pidie/node_modules/cache-loader/dist/cjs.js","mtime":1534142313674},{"path":"/home/tghazali/Documents/pidie/node_modules/vue-loader/lib/index.js","mtime":1536479208953},{"path":"/home/tghazali/Documents/pidie/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1536479242222}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"pidieui\"><a class=\"header-anchor\" href=\"#pidieui\" aria-hidden=\"true\">#</a> PidieUi</h1>\n<p>PidieUi is user interface components for building a web applications</p>\n<h1 id=\"introduction\"><a class=\"header-anchor\" href=\"#introduction\" aria-hidden=\"true\">#</a> Introduction</h1>\n<p>VuePress is composed of two parts: a minimalistic static site generator with a Vue-powered theming system, and a default theme optimized for writing technical documentation. It was created to support the documentation needs of Vue's own sub projects.</p>\n<p>Each page generated by VuePress has its own pre-rendered static HTML, providing great loading performance and is SEO-friendly. Once the page is loaded, however, Vue takes over the static content and turns it into a full Single-Page Application (SPA). Additional pages are fetched on demand as the user navigates around the site.</p>\n<h2 id=\"how-it-works\"><a class=\"header-anchor\" href=\"#how-it-works\" aria-hidden=\"true\">#</a> How It Works</h2>\n<p>A VuePress site is in fact a SPA powered by <a href=\"http://vuejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Vue<OutboundLink/></a>, <a href=\"https://github.com/vuejs/vue-router\" target=\"_blank\" rel=\"noopener noreferrer\">Vue Router<OutboundLink/></a> and <a href=\"http://webpack.js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">webpack<OutboundLink/></a>. If you've used Vue before, you will notice the familiar development experience when you are writing or developing custom themes (you can even use Vue DevTools to debug your custom theme!).</p>\n<p>During the build, we create a server-rendered version of the app and render the corresponding HTML by virtually visiting each route. This approach is inspired by <a href=\"https://nuxtjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Nuxt<OutboundLink/></a>'s <code>nuxt generate</code> command and other projects like <a href=\"https://www.gatsbyjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby<OutboundLink/></a>.</p>\n<p>Each markdown file is compiled into HTML with <a href=\"https://github.com/markdown-it/markdown-it\" target=\"_blank\" rel=\"noopener noreferrer\">markdown-it<OutboundLink/></a> and then processed as the template of a Vue component. This allows you to directly use Vue inside your markdown files and is great when you need to embed dynamic content.</p>\n<h2 id=\"features\"><a class=\"header-anchor\" href=\"#features\" aria-hidden=\"true\">#</a> Features</h2>\n<ul>\n<li><router-link to=\"./markdown.html\">Built-in markdown extensions</router-link> optimized for technical documentation</li>\n<li><router-link to=\"./using-vue.html\">Ability to leverage Vue inside markdown files</router-link></li>\n<li><router-link to=\"./custom-themes.html\">Vue-powered custom theme system</router-link></li>\n<li><router-link to=\"./../config/#serviceworker\">Automatic Service Worker generation</router-link></li>\n<li><router-link to=\"./../config/#ga\">Google Analytics Integration</router-link></li>\n<li><router-link to=\"./../default-theme-config/#last-updated\">&quot;Last Updated&quot; based on Git</router-link></li>\n<li><router-link to=\"./i18n.html\">Multi-language support</router-link></li>\n<li>A default theme with:\n<ul>\n<li>Responsive layout</li>\n<li><router-link to=\"./../default-theme-config/#homepage\">Optional Homepage</router-link></li>\n<li><router-link to=\"./../default-theme-config/#built-in-search\">Simple out-of-the-box header-based search</router-link></li>\n<li><router-link to=\"./../default-theme-config/#algolia-search\">Algolia Search</router-link></li>\n<li>Customizable <router-link to=\"./../default-theme-config/#navbar\">navbar</router-link> and <router-link to=\"./../default-theme-config/#sidebar\">sidebar</router-link></li>\n<li><router-link to=\"./../default-theme-config/#git-repo-and-edit-links\">Auto-generated GitHub link and page edit links</router-link></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"todo\"><a class=\"header-anchor\" href=\"#todo\" aria-hidden=\"true\">#</a> Todo</h2>\n<p>VuePress is still a work in progress. There are a few things that it currently does not support but are planned:</p>\n<ul>\n<li>Plugin support</li>\n<li>Blogging support</li>\n</ul>\n<p>Contributions are welcome!</p>\n<h2 id=\"why-not\"><a class=\"header-anchor\" href=\"#why-not\" aria-hidden=\"true\">#</a> Why Not ...?</h2>\n<h3 id=\"nuxt\"><a class=\"header-anchor\" href=\"#nuxt\" aria-hidden=\"true\">#</a> Nuxt</h3>\n<p>Nuxt is capable of doing what VuePress does, but it is designed for building applications. VuePress is focused on content-centric static sites and provides features tailored for technical documentation out of the box.</p>\n<h3 id=\"docsify-docute\"><a class=\"header-anchor\" href=\"#docsify-docute\" aria-hidden=\"true\">#</a> Docsify / Docute</h3>\n<p>Both are great projects and also Vue-powered. Except they are both completely runtime-driven and therefore not SEO-friendly. If you don't care about SEO and don't want to mess with installing dependencies, these are still great choices.</p>\n<h3 id=\"hexo\"><a class=\"header-anchor\" href=\"#hexo\" aria-hidden=\"true\">#</a> Hexo</h3>\n<p>Hexo has been serving the Vue docs well - in fact, we are probably still a long way to go from migrating away from it for our main site. The biggest problem is that its theming system is very static and string-based - we really want to leverage Vue for both the layout and the interactivity. Also, Hexo's markdown rendering isn't the most flexible to configure.</p>\n<h3 id=\"gitbook\"><a class=\"header-anchor\" href=\"#gitbook\" aria-hidden=\"true\">#</a> GitBook</h3>\n<p>We've been using GitBook for most of our sub project docs. The primary problem with GitBook is that its development reload performance is intolerable with a large amount of files. The default theme also has a pretty limiting navigation structure, and the theming system is, again, not Vue based. The team behind GitBook is also more focused on turning it into a commercial product rather than an open-source tool.</p>\n</div>\n",null]}